|--------------------------------------------------------------|
|- ispLEVER Classic 2.0.00.17.20.15 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  test01
Project Path         :  D:\FPGA_Projects\fpga_simple_clock\clock_isplvr_prj
Project Fitted on    :  Thu Feb 18 09:40:41 2016

Device               :  M4064_30
Package              :  44
GLB Input Mux Size   :  10
Available Blocks     :  4
Speed                :  -7.5
Part Number          :  LC4064V-75T44C
Source Format        :  Pure_Verilog_HDL


// Project 'test01' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.03 secs
Partition Time                  0.05 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                6
Total Logic Functions           58
  Total Output Pins             18
  Total Bidir I/O Pins          0
  Total Buried Nodes            40
Total Flip-Flops                34
  Total D Flip-Flops            21
  Total T Flip-Flops            13
  Total Latches                 0
Total Product Terms             187

Total Reserved Pins             0
Total Locked Pins               24
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             2
Total Unique Clock Enables      4
Total Unique Resets             0
Total Unique Presets            0

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  2        2      0    -->   100
  I/O / Enable Pins                 2        2      0    -->   100
I/O Pins                           28       20      8    -->    71
Logic Functions                    64       58      6    -->    90
  Input Registers                  30        0     30    -->     0

GLB Inputs                        144       83     61    -->    57
Logical Product Terms             320      153    167    -->    47
Occupied GLBs                       4        4      0    -->   100
Macrocells                         64       58      6    -->    90

Control Product Terms:
  GLB Clock/Clock Enables           4        3      1    -->    75
  GLB Reset/Presets                 4        0      4    -->     0
  Macrocell Clocks                 64        0     64    -->     0
  Macrocell Clock Enables          64       13     51    -->    20
  Macrocell Enables                64        0     64    -->     0
  Macrocell Resets                 64        0     64    -->     0
  Macrocell Presets                64        0     64    -->     0

Global Routing Pool                96       45     51    -->    46
  GRP from IFB                     ..        5     ..    -->    ..
    (from input signals)           ..        5     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       40     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A      4    23    27      4/8      0   14      0              2       34       14
  GLB    B      2    12    14      2/7      0   15      0              1       22       15
  GLB    C     11    16    27      8/8      0   14      0              2       41       14
  GLB    D      0    15    15      6/7      0   15      0              1       56       15
-------------------------------------------------------------------------------------------
TOTALS:        17    66    83     20/30     0   58      0              6      153       58

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   1      0         0      5      0      0      0
  GLB    B   0      0         0      0      0      0      0
  GLB    C   1      0         0      1      0      0      0
  GLB    D   1      0         0      7      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              No
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_DOWN (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
------------------------------------------------------------------------------
1     | TDI   |   -  |    |        |                 |       |
2     |  I_O  |   0  |A10 |        |                 |       |
3     |  I_O  |   0  |A12 |        |                 |       |
4     |  I_O  |   0  |A14 |        |                 |       |
5     |GNDIO0 |   -  |    |        |                 |       |
6     |VCCIO0 |   -  |    |        |                 |       |
7     |  I_O  |   0  |B0  |        |                 |       |
8     |  I_O  |   0  |B2  |        |                 |       |
9     |  I_O  |   0  |B4  |        |                 |       |
10    | TCK   |   -  |    |        |                 |       |
11    | VCC   |   -  |    |        |                 |       |
12    | GND   |   -  |    |        |                 |       |
13    |  I_O  |   0  |B8  |    *   |LVCMOS33         | Output|out_clk
14    |  I_O  |   0  |B10 |    *   |LVCMOS33         | Input |in_clk
15    |  I_O  |   0  |B12 |        |                 |       |
16    |  I_O  |   0  |B14 |        |                 |       |
17    |INCLK2 |   1  |    |    *   |LVCMOS33         | Input |btn_SAFE
18    |  I_O  |   1  |C0  |    *   |LVCMOS33         | Input |btn_SS
19    |  I_O  |   1  |C2  |    *   |LVCMOS33         | Input |btn_MM
20    |  I_O  |   1  |C4  |    *   |LVCMOS33         | Input |btn_HH
21    |  I_O  |   1  |C6  |    *   |LVCMOS33         | Output|led_second_tick
22    |  I_O  |   1  |C8  |    *   |LVCMOS33         | Output|led21
23    | TMS   |   -  |    |        |                 |       |
24    |  I_O  |   1  |C10 |    *   |LVCMOS33         | Output|led20
25    |  I_O  |   1  |C12 |    *   |LVCMOS33         | Output|led19
26    |  I_O  |   1  |C14 |    *   |LVCMOS33         | Output|led18
27    |GNDIO1 |   -  |    |        |                 |       |
28    |VCCIO1 |   -  |    |        |                 |       |
29    |  I_O  |   1  |D0  |    *   |LVCMOS33         | Output|led17
30    |  I_O  |   1  |D2  |    *   |LVCMOS33         | Output|led16
31    |  I_O  |   1  |D4  |    *   |LVCMOS33         | Output|led15
32    | TDO   |   -  |    |        |                 |       |
33    | VCC   |   -  |    |        |                 |       |
34    | GND   |   -  |    |        |                 |       |
35    |  I_O  |   1  |D8  |    *   |LVCMOS33         | Output|led13
36    |  I_O  |   1  |D10 |    *   |LVCMOS33         | Output|led12
37    |  I_O  |   1  |D12 |    *   |LVCMOS33         | Output|led10
38    | I_O/OE|   1  |D14 |    *   |LVCMOS33         | Output|led9
39    |INCLK0 |   0  |    |    *   |LVCMOS33         | Input |clk
40    | I_O/OE|   0  |A0  |    *   |LVCMOS33         | Output|led8
41    |  I_O  |   0  |A2  |    *   |LVCMOS33         | Output|led7
42    |  I_O  |   0  |A4  |    *   |LVCMOS33         | Output|led6
43    |  I_O  |   0  |A6  |    *   |LVCMOS33         | Output|led_gnd2
44    |  I_O  |   0  |A8  |    *   |LVCMOS33         | Output|led_gnd1
------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type           Pullup Signal
---------------------------------------
  20   C  I/O   1 A---    Down btn_HH
  19   C  I/O   1 A---    Down btn_MM
  17  -- INCLK  3 A-CD    Down btn_SAFE
  18   C  I/O   1 --C-    Down btn_SS
  39  -- INCLK    ----    Down clk
  14   B  I/O   1 -B--    Down in_clk
---------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
----------------------------------------------------------------------------
  37   D  6  2   4  1 COM                  ----  Slow   Down led10
  36   D  6  2   4  1 COM                  ----  Slow   Down led12
  35   D  6  1   5  1 COM                  ----  Slow   Down led13
  31   D  5  1   4  1 COM                  ----  Slow   Down led15
  30   D  5  1   4  1 COM                  ----  Slow   Down led16
  29   D  5  1   4  1 COM                  ----  Slow   Down led17
  26   C  8  1   3  1 COM                  ----  Slow   Down led18
  25   C  7  1   4  1 COM                  ----  Slow   Down led19
  24   C  7  1   4  1 COM                  ----  Slow   Down led20
  22   C  6  1   5  1 COM                  ----  Slow   Down led21
  42   A  3  1   2  1 COM                  ----  Slow   Down led6
  41   A  3  1   1  1 COM                  ----  Slow   Down led7
  40   A  3  1   1  1 COM                  ----  Slow   Down led8
  38   D  8  1   3  1 COM                  ----  Slow   Down led9
  44   A  2  1   1  1 COM                  ----  Slow   Down led_gnd1
  43   A  2  1   1  1 COM                  ----  Slow   Down led_gnd2
  21   C 10  1   2  1 COM                  ----  Slow   Down led_second_tick
  13   B  1  1   1  1 COM                  ----  Slow   Down out_clk
----------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
-------------------------------------------------------------------
-------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P         Signal
--------------------------------------------------------
 4   C  5  -   3  1 COM              1 --C-  N_297_0
10   D  6  -   4  1 COM              1 ---D  N_298_i
13   B  1  1   1  1 DFF      R       1 -B--  clk_div_0_
 9   B 10  1   1  1 TFF      R       2 -BC-  clk_div_10_
10   B 11  1   1  1 TFF      R       2 -BC-  clk_div_11_
11   B 12  1   1  1 TFF      R       2 -BC-  clk_div_12_
12   B 13  1   1  1 TFF      R       3 A-CD  clk_div_13_
 3   B  2  1   2  1 DFF      R       1 -B--  clk_div_1_
 1   B  3  1   3  1 DFF      R       1 -B--  clk_div_2_
 0   B  4  1   4  1 DFF      R       1 -B--  clk_div_3_
 2   B  5  1   2  1 DFF      R       1 -B--  clk_div_4_
14   B  5  1   1  1 TFF      R       1 -B--  clk_div_5_
 4   B  6  1   1  1 TFF      R       2 -BC-  clk_div_6_
 5   B  7  1   1  1 TFF      R       4 ABCD  clk_div_7_
 6   B  8  1   1  1 TFF      R       2 -BC-  clk_div_8_
 7   B  9  1   1  1 TFF      R       2 -BC-  clk_div_9_
14   D  3  1   2  1 DFF      R *     2 A--D  h_0_
13   A 15  -   2  1 COM              1 ---D  h_0__0
 9   D  6  1   4  1 DFF      R *     3 A-CD  h_1_
 6   D  8  1   5  1 DFF      R *     2 A--D  h_2_
 7   D  6  1   5  1 DFF      R *     2 A--D  h_3_
11   C  4  1   2  1 DFF      R *     3 A-CD  hh_0_
 7   A 21  -   4  1 COM              2 A-C-  hh_0__0
 9   A  5  1   3  1 DFF      R *     2 A--D  hh_1_
10   A  3  1   2  1 DFF      R *     2 A-C-  m_0_
11   A  8  -   2  1 COM              1 A---  m_0__0
 3   A  6  1   4  1 DFF      R *     2 A-C-  m_1_
 5   A  5  1   4  1 DFF      R *     2 A-C-  m_2_
 1   A  6  1   5  1 DFF      R *     2 A-C-  m_3_
13   D  3  1   2  1 DFF      R *     3 A-CD  mm_0_
12   A 12  -   2  1 COM              1 ---D  mm_0__0
11   D  5  1   3  1 DFF      R *     2 A--D  mm_1_
12   D  5  1   3  1 DFF      R *     3 A-CD  mm_2_
13   C  3  1   1  1 DFF      R       2 A-C-  sec_0_
12   C  4  1   2  1 DFF      R       2 A-C-  sec_1_
 5   C  5  1   3  1 DFF      R       2 A-C-  sec_2_
 3   C  9  1   3  1 TFF      R       2 A-C-  sec_3_
 7   C  9  1   3  1 TFF      R       2 A-C-  sec_4_
 9   C  9  1   3  1 TFF      R       2 A-C-  sec_5_
10   C  9  1   3  1 TFF      R       2 A-C-  sec_6_
--------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
N_297_0 = !( m_0_.Q & m_1_.Q & m_2_.Q & clk_div_7_.Q
    # m_2_.Q & m_3_.Q
    # m_1_.Q & m_3_.Q ) ; (3 pterms, 5 signals)

N_298_i = !( h_0_.Q & h_1_.Q & h_2_.Q & clk_div_7_.Q
    # h_2_.Q & h_3_.Q
    # h_1_.Q & h_3_.Q
    # !btn_SAFE ) ; (4 pterms, 6 signals)

clk_div_0_.D = !clk_div_0_.Q ; (1 pterm, 1 signal)
clk_div_0_.C = clk ; (1 pterm, 1 signal)

clk_div_10_.T = clk_div_6_.Q & clk_div_7_.Q & clk_div_8_.Q & clk_div_9_.Q
       & clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q & clk_div_3_.Q
       & clk_div_4_.Q & clk_div_5_.Q ; (1 pterm, 10 signals)
clk_div_10_.C = clk ; (1 pterm, 1 signal)

clk_div_11_.T = clk_div_6_.Q & clk_div_7_.Q & clk_div_8_.Q & clk_div_9_.Q
       & clk_div_10_.Q & clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q
       & clk_div_3_.Q & clk_div_4_.Q & clk_div_5_.Q ; (1 pterm, 11 signals)
clk_div_11_.C = clk ; (1 pterm, 1 signal)

clk_div_12_.T = clk_div_6_.Q & clk_div_7_.Q & clk_div_8_.Q & clk_div_9_.Q
       & clk_div_10_.Q & clk_div_11_.Q & clk_div_0_.Q & clk_div_1_.Q
       & clk_div_2_.Q & clk_div_3_.Q & clk_div_4_.Q & clk_div_5_.Q ; (1 pterm, 12 signals)
clk_div_12_.C = clk ; (1 pterm, 1 signal)

clk_div_13_.T = clk_div_6_.Q & clk_div_7_.Q & clk_div_8_.Q & clk_div_9_.Q
       & clk_div_10_.Q & clk_div_11_.Q & clk_div_12_.Q & clk_div_0_.Q
       & clk_div_1_.Q & clk_div_2_.Q & clk_div_3_.Q & clk_div_4_.Q
       & clk_div_5_.Q ; (1 pterm, 13 signals)
clk_div_13_.C = clk ; (1 pterm, 1 signal)

clk_div_1_.D = clk_div_0_.Q & !clk_div_1_.Q
    # !clk_div_0_.Q & clk_div_1_.Q ; (2 pterms, 2 signals)
clk_div_1_.C = clk ; (1 pterm, 1 signal)

clk_div_2_.D = clk_div_0_.Q & clk_div_1_.Q & !clk_div_2_.Q
    # !clk_div_1_.Q & clk_div_2_.Q
    # !clk_div_0_.Q & clk_div_2_.Q ; (3 pterms, 3 signals)
clk_div_2_.C = clk ; (1 pterm, 1 signal)

clk_div_3_.D = clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q & !clk_div_3_.Q
    # !clk_div_2_.Q & clk_div_3_.Q
    # !clk_div_1_.Q & clk_div_3_.Q
    # !clk_div_0_.Q & clk_div_3_.Q ; (4 pterms, 4 signals)
clk_div_3_.C = clk ; (1 pterm, 1 signal)

clk_div_4_.D.X1 = clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q & clk_div_3_.Q ; (1 pterm, 4 signals)
clk_div_4_.D.X2 = clk_div_4_.Q ; (1 pterm, 1 signal)
clk_div_4_.C = clk ; (1 pterm, 1 signal)

clk_div_5_.T = clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q & clk_div_3_.Q
       & clk_div_4_.Q ; (1 pterm, 5 signals)
clk_div_5_.C = clk ; (1 pterm, 1 signal)

clk_div_6_.T = clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q & clk_div_3_.Q
       & clk_div_4_.Q & clk_div_5_.Q ; (1 pterm, 6 signals)
clk_div_6_.C = clk ; (1 pterm, 1 signal)

clk_div_7_.T = clk_div_6_.Q & clk_div_0_.Q & clk_div_1_.Q & clk_div_2_.Q
       & clk_div_3_.Q & clk_div_4_.Q & clk_div_5_.Q ; (1 pterm, 7 signals)
clk_div_7_.C = clk ; (1 pterm, 1 signal)

clk_div_8_.T = clk_div_6_.Q & clk_div_7_.Q & clk_div_0_.Q & clk_div_1_.Q
       & clk_div_2_.Q & clk_div_3_.Q & clk_div_4_.Q & clk_div_5_.Q ; (1 pterm, 8 signals)
clk_div_8_.C = clk ; (1 pterm, 1 signal)

clk_div_9_.T = clk_div_6_.Q & clk_div_7_.Q & clk_div_8_.Q & clk_div_0_.Q
       & clk_div_1_.Q & clk_div_2_.Q & clk_div_3_.Q & clk_div_4_.Q
       & clk_div_5_.Q ; (1 pterm, 9 signals)
clk_div_9_.C = clk ; (1 pterm, 1 signal)

h_0_.D = !h_0_.Q ; (1 pterm, 1 signal)
h_0_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
h_0_.CE = h_0__0 ; (1 pterm, 1 signal)

h_0__0 = btn_HH
    # m_0_.Q & !m_1_.Q & !m_2_.Q & m_3_.Q & mm_0_.Q & !mm_1_.Q & mm_2_.Q
       & !sec_3_.Q & sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q & sec_5_.Q
       & sec_6_.Q ; (2 pterms, 15 signals)

h_1_.D = h_0_.Q & !h_1_.Q & h_2_.Q
    # h_0_.Q & !h_1_.Q & !h_3_.Q
    # !h_0_.Q & h_1_.Q ; (3 pterms, 4 signals)
h_1_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
h_1_.CE = h_0__0 ; (1 pterm, 1 signal)

h_2_.D = !( !h_2_.Q & !h_3_.Q & !hh_0_.Q & hh_1_.Q
    # h_0_.Q & h_1_.Q & h_2_.Q
    # !h_1_.Q & !h_2_.Q
    # !h_0_.Q & !h_2_.Q ) ; (4 pterms, 6 signals)
h_2_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
h_2_.CE = h_0__0 ; (1 pterm, 1 signal)

h_3_.D = h_0_.Q & h_1_.Q & h_2_.Q & !h_3_.Q
    # h_1_.Q & !h_2_.Q & h_3_.Q
    # !h_1_.Q & h_2_.Q & h_3_.Q
    # !h_0_.Q & h_3_.Q ; (4 pterms, 4 signals)
h_3_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
h_3_.CE = h_0__0 ; (1 pterm, 1 signal)

hh_0_.D = !h_1_.Q & !hh_0_.Q ; (1 pterm, 2 signals)
hh_0_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
hh_0_.CE = hh_0__0 ; (1 pterm, 1 signal)

hh_0__0 = btn_HH & h_0_.Q & !h_1_.Q & !h_2_.Q & h_3_.Q
    # btn_HH & h_0_.Q & h_1_.Q & !h_2_.Q & !h_3_.Q & !hh_0_.Q & hh_1_.Q
    # m_0_.Q & !m_1_.Q & !m_2_.Q & m_3_.Q & mm_0_.Q & !mm_1_.Q & mm_2_.Q
       & h_0_.Q & !h_1_.Q & !h_2_.Q & h_3_.Q & !sec_3_.Q & sec_0_.Q & sec_1_.Q
       & sec_2_.Q & sec_4_.Q & sec_5_.Q & sec_6_.Q
    # m_0_.Q & !m_1_.Q & !m_2_.Q & m_3_.Q & mm_0_.Q & !mm_1_.Q & mm_2_.Q
       & h_0_.Q & h_1_.Q & !h_2_.Q & !h_3_.Q & !hh_0_.Q & hh_1_.Q & !sec_3_.Q
       & sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q & sec_5_.Q & sec_6_.Q ; (4 pterms, 21 signals)

hh_1_.D = !h_1_.Q & hh_0_.Q & !hh_1_.Q
    # !h_1_.Q & !hh_0_.Q & hh_1_.Q ; (2 pterms, 3 signals)
hh_1_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
hh_1_.CE = hh_0__0 ; (1 pterm, 1 signal)

led10 = !( !h_1_.Q & !h_2_.Q & !h_3_.Q & clk_div_7_.Q
    # !h_0_.Q & h_1_.Q & h_2_.Q & !clk_div_7_.Q
    # h_0_.Q & !h_1_.Q & h_2_.Q & !clk_div_7_.Q
    # !N_298_i ) ; (4 pterms, 6 signals)

led12 = !( h_0_.Q & !h_1_.Q & !h_2_.Q & !h_3_.Q & clk_div_7_.Q
    # !h_0_.Q & h_1_.Q & !h_2_.Q & !clk_div_7_.Q
    # !h_0_.Q & !h_1_.Q & h_2_.Q & clk_div_7_.Q
    # !N_298_i ) ; (4 pterms, 6 signals)

led13 = btn_SAFE & !h_0_.Q & h_2_.Q & !h_3_.Q & clk_div_7_.Q
    # btn_SAFE & !h_0_.Q & !h_1_.Q & !h_2_.Q
    # btn_SAFE & h_0_.Q & !h_1_.Q & h_2_.Q & !h_3_.Q
    # btn_SAFE & !h_1_.Q & !h_2_.Q & h_3_.Q
    # btn_SAFE & h_1_.Q & !h_3_.Q & !clk_div_7_.Q ; (5 pterms, 6 signals)

led15 = btn_SAFE & !mm_0_.Q & !mm_2_.Q & clk_div_7_.Q
    # btn_SAFE & !mm_0_.Q & !mm_1_.Q & !clk_div_7_.Q
    # btn_SAFE & mm_0_.Q & !mm_1_.Q & mm_2_.Q
    # btn_SAFE & mm_1_.Q & !mm_2_.Q & clk_div_7_.Q ; (4 pterms, 5 signals)

led16 = btn_SAFE & !mm_0_.Q & !mm_1_.Q & clk_div_7_.Q
    # btn_SAFE & mm_1_.Q & !mm_2_.Q
    # btn_SAFE & !mm_1_.Q & mm_2_.Q & !clk_div_7_.Q
    # btn_SAFE & !mm_2_.Q & clk_div_7_.Q ; (4 pterms, 5 signals)

led17 = btn_SAFE & !mm_0_.Q & !mm_2_.Q & !clk_div_7_.Q
    # btn_SAFE & mm_0_.Q & mm_1_.Q & !mm_2_.Q
    # btn_SAFE & mm_0_.Q & !mm_1_.Q & mm_2_.Q
    # btn_SAFE & !mm_1_.Q & clk_div_7_.Q ; (4 pterms, 5 signals)

led18 = btn_SAFE & !mm_0_.Q & !mm_2_.Q & !clk_div_7_.Q
    # btn_SAFE & !m_0_.Q & m_1_.Q & !m_3_.Q & clk_div_7_.Q
    # btn_SAFE & !m_0_.Q & !m_1_.Q & !m_2_.Q & clk_div_7_.Q ; (3 pterms, 8 signals)

led19.X1 = btn_SAFE & !m_1_.Q & !m_2_.Q & !m_3_.Q & clk_div_7_.Q & N_297_0
    # btn_SAFE & m_0_.Q & !m_1_.Q & m_2_.Q & !clk_div_7_.Q & N_297_0
    # btn_SAFE & !m_0_.Q & m_1_.Q & m_2_.Q & !clk_div_7_.Q & N_297_0 ; (3 pterms, 7 signals)
led19.X2 = btn_SAFE & N_297_0 ; (1 pterm, 2 signals)

led20.X1 = btn_SAFE & !m_0_.Q & !m_1_.Q & m_2_.Q & clk_div_7_.Q & N_297_0
    # btn_SAFE & !m_0_.Q & m_1_.Q & !m_2_.Q & !clk_div_7_.Q & N_297_0
    # btn_SAFE & m_0_.Q & !m_1_.Q & !m_2_.Q & !m_3_.Q & clk_div_7_.Q & N_297_0 ; (3 pterms, 7 signals)
led20.X2 = btn_SAFE & N_297_0 ; (1 pterm, 2 signals)

led21 = btn_SAFE & !m_0_.Q & m_2_.Q & !m_3_.Q & clk_div_7_.Q
    # btn_SAFE & !m_0_.Q & !m_1_.Q & !m_2_.Q
    # btn_SAFE & m_0_.Q & !m_1_.Q & m_2_.Q & !m_3_.Q
    # btn_SAFE & !m_1_.Q & !m_2_.Q & m_3_.Q
    # btn_SAFE & m_1_.Q & !m_3_.Q & !clk_div_7_.Q ; (5 pterms, 6 signals)

led6 = btn_SAFE & hh_0_.Q & !hh_1_.Q
    # btn_SAFE & !hh_0_.Q & hh_1_.Q ; (2 pterms, 3 signals)

led7 = btn_SAFE & !hh_0_.Q & hh_1_.Q ; (1 pterm, 3 signals)

led8 = btn_SAFE & !hh_0_.Q & hh_1_.Q ; (1 pterm, 3 signals)

led9 = btn_SAFE & hh_0_.Q & !hh_1_.Q & !clk_div_7_.Q
    # btn_SAFE & !h_0_.Q & h_1_.Q & !h_3_.Q & clk_div_7_.Q
    # btn_SAFE & !h_0_.Q & !h_1_.Q & !h_2_.Q & clk_div_7_.Q ; (3 pterms, 8 signals)

led_gnd1 = !( btn_SAFE & !clk_div_7_.Q ) ; (1 pterm, 2 signals)

led_gnd2 = btn_SAFE & !clk_div_7_.Q ; (1 pterm, 2 signals)

led_second_tick = !clk_div_6_.Q & !clk_div_7_.Q & !clk_div_8_.Q
       & !clk_div_9_.Q & !clk_div_10_.Q & !clk_div_11_.Q & !clk_div_12_.Q
       & !clk_div_13_.Q & sec_0_.Q
    # btn_SAFE & sec_0_.Q ; (2 pterms, 10 signals)

m_0_.D = !m_0_.Q ; (1 pterm, 1 signal)
m_0_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
m_0_.CE = m_0__0 ; (1 pterm, 1 signal)

m_0__0 = btn_MM
    # !sec_3_.Q & sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q & sec_5_.Q
       & sec_6_.Q ; (2 pterms, 8 signals)

m_1_.D = m_0_.Q & !m_1_.Q & m_2_.Q
    # m_0_.Q & !m_1_.Q & !m_3_.Q
    # !m_0_.Q & m_1_.Q ; (3 pterms, 4 signals)
m_1_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
m_1_.CE = m_0__0 ; (1 pterm, 1 signal)

m_2_.D = m_0_.Q & m_1_.Q & !m_2_.Q
    # !m_1_.Q & m_2_.Q
    # !m_0_.Q & m_2_.Q ; (3 pterms, 3 signals)
m_2_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
m_2_.CE = m_0__0 ; (1 pterm, 1 signal)

m_3_.D = m_0_.Q & m_1_.Q & m_2_.Q & !m_3_.Q
    # m_1_.Q & !m_2_.Q & m_3_.Q
    # !m_1_.Q & m_2_.Q & m_3_.Q
    # !m_0_.Q & m_3_.Q ; (4 pterms, 4 signals)
m_3_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
m_3_.CE = m_0__0 ; (1 pterm, 1 signal)

mm_0_.D = !mm_0_.Q ; (1 pterm, 1 signal)
mm_0_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
mm_0_.CE = mm_0__0 ; (1 pterm, 1 signal)

mm_0__0 = btn_MM & m_0_.Q & !m_1_.Q & !m_2_.Q & m_3_.Q
    # m_0_.Q & !m_1_.Q & !m_2_.Q & m_3_.Q & !sec_3_.Q & sec_0_.Q & sec_1_.Q
       & sec_2_.Q & sec_4_.Q & sec_5_.Q & sec_6_.Q ; (2 pterms, 12 signals)

mm_1_.D = mm_0_.Q & !mm_1_.Q & !mm_2_.Q
    # !mm_0_.Q & mm_1_.Q ; (2 pterms, 3 signals)
mm_1_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
mm_1_.CE = mm_0__0 ; (1 pterm, 1 signal)

mm_2_.D = mm_0_.Q & mm_1_.Q & !mm_2_.Q
    # !mm_0_.Q & mm_2_.Q ; (2 pterms, 3 signals)
mm_2_.C = clk_div_13_.Q ; (1 pterm, 1 signal)
mm_2_.CE = mm_0__0 ; (1 pterm, 1 signal)

out_clk = !in_clk ; (1 pterm, 1 signal)

sec_0_.D = !btn_SS & !sec_0_.Q ; (1 pterm, 2 signals)
sec_0_.C = clk_div_13_.Q ; (1 pterm, 1 signal)

sec_1_.D = !btn_SS & sec_0_.Q & !sec_1_.Q
    # !btn_SS & !sec_0_.Q & sec_1_.Q ; (2 pterms, 3 signals)
sec_1_.C = clk_div_13_.Q ; (1 pterm, 1 signal)

sec_2_.D = !btn_SS & sec_0_.Q & sec_1_.Q & !sec_2_.Q
    # !btn_SS & !sec_1_.Q & sec_2_.Q
    # !btn_SS & !sec_0_.Q & sec_2_.Q ; (3 pterms, 4 signals)
sec_2_.C = clk_div_13_.Q ; (1 pterm, 1 signal)

sec_3_.T.X1 = btn_SS & sec_3_.Q
    # !btn_SS & sec_0_.Q & sec_1_.Q & sec_2_.Q ; (2 pterms, 5 signals)
sec_3_.T.X2 = !btn_SS & !sec_3_.Q & sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q
       & sec_5_.Q & sec_6_.Q ; (1 pterm, 8 signals)
sec_3_.C = clk_div_13_.Q ; (1 pterm, 1 signal)

sec_4_.T = !btn_SS & sec_3_.Q & sec_0_.Q & sec_1_.Q & sec_2_.Q
    # sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q & sec_5_.Q & sec_6_.Q
    # btn_SS & sec_4_.Q ; (3 pterms, 8 signals)
sec_4_.C = clk_div_13_.Q ; (1 pterm, 1 signal)

sec_5_.T = !btn_SS & sec_3_.Q & sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q
    # sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q & sec_5_.Q & sec_6_.Q
    # btn_SS & sec_5_.Q ; (3 pterms, 8 signals)
sec_5_.C = clk_div_13_.Q ; (1 pterm, 1 signal)

sec_6_.T = !btn_SS & sec_3_.Q & sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q
       & sec_5_.Q
    # sec_0_.Q & sec_1_.Q & sec_2_.Q & sec_4_.Q & sec_5_.Q & sec_6_.Q
    # btn_SS & sec_6_.Q ; (3 pterms, 8 signals)
sec_6_.C = clk_div_13_.Q ; (1 pterm, 1 signal)




